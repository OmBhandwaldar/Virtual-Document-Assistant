// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pdf {
  id          String   @id @default(uuid())
  title       String
  filename    String
  storagePath String
  pages       Int
  uploadedAt  DateTime @default(now())
  preview     String?
  indexedAt   DateTime?
  chunks      Chunk[]
  quizzes     Quiz[]
}

model Chunk {
  id        String   @id @default(uuid())
  pdfId     String
  page      Int
  startChar Int
  endChar   Int
  text      String
  pdf       Pdf      @relation(fields: [pdfId], references: [id])
}

model Quiz {
  id        String   @id @default(uuid())
  pdfId     String
  type      String
  createdAt DateTime @default(now())
  pdf       Pdf      @relation(fields: [pdfId], references: [id])
  questions Question[]
}

model Question {
  id           String   @id @default(uuid())
  quizId       String
  text         String
  options      Json
  correctIndex Int
  explanation  String
  quiz         Quiz      @relation(fields: [quizId], references: [id])
}

model Chat {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  messages  Message[]
}

model Message {
  id        String   @id @default(uuid())
  chatId    String
  role      String
  content   String
  createdAt DateTime @default(now())
  chat      Chat      @relation(fields: [chatId], references: [id])
}