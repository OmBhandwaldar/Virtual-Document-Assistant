generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pdf {
  id          String       @id @default(uuid())
  title       String
  filename    String
  storagePath String
  pages       Int
  uploadedAt  DateTime     @default(now())
  preview     String?
  indexedAt   DateTime?
  chatId      String?
  chunks      Chunk[]
  Chat        Chat?        @relation(fields: [chatId], references: [id], onUpdate: NoAction, map: "pdf_chatid_fkey")
  quizzes     Quiz[]
  embeddings  embeddings[]
}

model Chunk {
  id         String      @id @default(uuid())
  pdfId      String
  page       Int
  startChar  Int
  endChar    Int
  text       String
  pdf        Pdf         @relation(fields: [pdfId], references: [id])
  embeddings embeddings?
}

model Quiz {
  id        String     @id @default(uuid())
  pdfId     String
  type      String
  createdAt DateTime   @default(now())
  questions Question[]
  pdf       Pdf        @relation(fields: [pdfId], references: [id])
}

model Question {
  id           String @id @default(uuid())
  quizId       String
  text         String
  options      Json
  correctIndex Int
  explanation  String
  quiz         Quiz   @relation(fields: [quizId], references: [id])
}

model Chat {
  id        String    @id @default(uuid())
  title     String
  createdAt DateTime  @default(now())
  messages  Message[]
  Pdf       Pdf[]
}

model Message {
  id        String   @id @default(uuid())
  chatId    String
  role      String
  content   String
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId], references: [id])
}

model embeddings {
  id         String                 @id @default(dbgenerated("(gen_random_uuid())::text"))
  pdf_id     String?
  chunk_id   String?                @unique
  content    String?
  embedding  Unsupported("vector")?
  page       Int?
  created_at DateTime?              @default(now()) @db.Timestamptz(6)
  Chunk      Chunk?                 @relation(fields: [chunk_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Pdf        Pdf?                   @relation(fields: [pdf_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([embedding], map: "embeddings_embedding_cos_idx")
}
